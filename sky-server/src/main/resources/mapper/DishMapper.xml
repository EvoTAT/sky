<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<!-- 定义映射器接口的命名空间，与Java接口对应 -->
<mapper namespace="com.sky.mapper.DishMapper">

    <!--
        插入菜品信息
        id: 与接口中的方法名对应
        useGeneratedKeys: 启用自动生成主键
        keyProperty: 指定主键属性名，将自动生成的主键值设置到对象的id属性中
    -->
    <insert id="insert" useGeneratedKeys="true" keyProperty="id">
        insert into dish (name, category_id, price, image, description, create_time, update_time, create_user, update_user)
        values (#{name}, #{categoryId}, #{price}, #{image}, #{description}, #{createTime}, #{updateTime}, #{createUser}, #{updateUser})
    </insert>

    <!--
        更新菜品信息
        id: 与接口中的方法名对应
        parameterType: 指定参数类型为Dish（包含菜品信息）
    -->
    <update id="update" parameterType="Dish">
        update dish
        <set>
            <if test="name != null">name = #{name},</if>
            <if test="categoryId != null">category_id = #{categoryId},</if>
            <if test="price != null">price = #{price},</if>
            <if test="image != null">image = #{image},</if>
            <if test="description != null">description = #{description},</if>
            <if test="status != null">status = #{status},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="updateUser != null">update_user = #{updateUser},</if>
        </set>
        where id = #{id}
    </update>
    <!--
        删除菜品信息
        id: 与接口中的方法名对应
    -->
    <delete id="deletegetByIds">
        delete from dish where id in
        <foreach item="id" collection="ids" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
    <!--
        分页查询菜品信息
        id: 与接口中的方法名对应
        resultType: 指定查询结果的类型为DishVO（包含菜品和分类名称信息）
    -->
    <select id="pageQuery" resultType="com.sky.vo.DishVO">
        <!-- 关联查询菜品表和分类表，获取菜品信息和对应的分类名称 -->
        select d.*, c.name as categoryName
        from dish d
        left join category c on d.category_id = c.id
        <!-- 动态条件查询 -->
        <where>
            <!-- 如果菜品名称不为空，则按名称模糊查询 -->
            <if test="name != null and name != ''">
                and d.name like '%${name}%'
            </if>
            <!-- 如果分类ID不为空，则按分类ID查询 -->
            <if test="categoryId != null">
                and d.category_id = #{categoryId}
            </if>
            <!-- 如果状态不为空，则按状态查询（0禁用，1启用） -->
            <if test="status != null">
                and d.status = #{status}
            </if>
        </where>
        <!-- 按更新时间降序排序 -->
        order by d.update_time desc
    </select>
</mapper>